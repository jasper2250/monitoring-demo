/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/galleryApplicationVersionsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a GalleryApplicationVersions. */
var GalleryApplicationVersions = /** @class */ (function () {
    /**
     * Create a GalleryApplicationVersions.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function GalleryApplicationVersions(client) {
        this.client = client;
    }
    /**
     * Create or update a gallery Application Version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the
     * Application Version is to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created.
     * Needs to follow semantic version name pattern: The allowed characters are digit and period.
     * Digits must be within the range of a 32-bit integer. Format:
     * <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application
     * Version operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryApplicationVersionsCreateOrUpdateResponse>
     */
    GalleryApplicationVersions.prototype.createOrUpdate = function (resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, galleryApplicationVersion, options) {
        return this.beginCreateOrUpdate(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, galleryApplicationVersion, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Update a gallery Application Version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the
     * Application Version is to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated.
     * Needs to follow semantic version name pattern: The allowed characters are digit and period.
     * Digits must be within the range of a 32-bit integer. Format:
     * <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryApplicationVersionsUpdateResponse>
     */
    GalleryApplicationVersions.prototype.update = function (resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, galleryApplicationVersion, options) {
        return this.beginUpdate(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, galleryApplicationVersion, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    GalleryApplicationVersions.prototype.get = function (resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryApplicationName: galleryApplicationName,
            galleryApplicationVersionName: galleryApplicationVersionName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Delete a gallery Application Version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the
     * Application Version resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    GalleryApplicationVersions.prototype.deleteMethod = function (resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, options) {
        return this.beginDeleteMethod(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    GalleryApplicationVersions.prototype.listByGalleryApplication = function (resourceGroupName, galleryName, galleryApplicationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryApplicationName: galleryApplicationName,
            options: options
        }, listByGalleryApplicationOperationSpec, callback);
    };
    /**
     * Create or update a gallery Application Version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the
     * Application Version is to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created.
     * Needs to follow semantic version name pattern: The allowed characters are digit and period.
     * Digits must be within the range of a 32-bit integer. Format:
     * <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application
     * Version operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    GalleryApplicationVersions.prototype.beginCreateOrUpdate = function (resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, galleryApplicationVersion, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryApplicationName: galleryApplicationName,
            galleryApplicationVersionName: galleryApplicationVersionName,
            galleryApplicationVersion: galleryApplicationVersion,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Update a gallery Application Version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the
     * Application Version is to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated.
     * Needs to follow semantic version name pattern: The allowed characters are digit and period.
     * Digits must be within the range of a 32-bit integer. Format:
     * <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    GalleryApplicationVersions.prototype.beginUpdate = function (resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, galleryApplicationVersion, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryApplicationName: galleryApplicationName,
            galleryApplicationVersionName: galleryApplicationVersionName,
            galleryApplicationVersion: galleryApplicationVersion,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    /**
     * Delete a gallery Application Version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the
     * Application Version resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    GalleryApplicationVersions.prototype.beginDeleteMethod = function (resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryApplicationName: galleryApplicationName,
            galleryApplicationVersionName: galleryApplicationVersionName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    GalleryApplicationVersions.prototype.listByGalleryApplicationNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByGalleryApplicationNextOperationSpec, callback);
    };
    return GalleryApplicationVersions;
}());
export { GalleryApplicationVersions };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryApplicationName,
        Parameters.galleryApplicationVersionName
    ],
    queryParameters: [
        Parameters.expand0,
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryApplicationVersion
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGalleryApplicationOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryApplicationName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryApplicationVersionList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryApplicationName,
        Parameters.galleryApplicationVersionName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "galleryApplicationVersion",
        mapper: __assign(__assign({}, Mappers.GalleryApplicationVersion), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.GalleryApplicationVersion
        },
        201: {
            bodyMapper: Mappers.GalleryApplicationVersion
        },
        202: {
            bodyMapper: Mappers.GalleryApplicationVersion
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryApplicationName,
        Parameters.galleryApplicationVersionName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "galleryApplicationVersion",
        mapper: __assign(__assign({}, Mappers.GalleryApplicationVersionUpdate), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.GalleryApplicationVersion
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryApplicationName,
        Parameters.galleryApplicationVersionName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGalleryApplicationNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryApplicationVersionList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=galleryApplicationVersions.js.map