import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a VirtualMachineRunCommands. */
export declare class VirtualMachineRunCommands {
    private readonly client;
    /**
     * Create a VirtualMachineRunCommands.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Lists all available run commands for a subscription in a location.
     * @param location The location upon which run commands is queried.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsListResponse>
     */
    list(location: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineRunCommandsListResponse>;
    /**
     * @param location The location upon which run commands is queried.
     * @param callback The callback
     */
    list(location: string, callback: msRest.ServiceCallback<Models.RunCommandListResult>): void;
    /**
     * @param location The location upon which run commands is queried.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RunCommandListResult>): void;
    /**
     * Gets specific run command for a subscription in a location.
     * @param location The location upon which run commands is queried.
     * @param commandId The command id.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsGetResponse>
     */
    get(location: string, commandId: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineRunCommandsGetResponse>;
    /**
     * @param location The location upon which run commands is queried.
     * @param commandId The command id.
     * @param callback The callback
     */
    get(location: string, commandId: string, callback: msRest.ServiceCallback<Models.RunCommandDocument>): void;
    /**
     * @param location The location upon which run commands is queried.
     * @param commandId The command id.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(location: string, commandId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RunCommandDocument>): void;
    /**
     * The operation to create or update the run command.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine where the run command should be created or
     * updated.
     * @param runCommandName The name of the virtual machine run command.
     * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, vmName: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommand, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineRunCommandsCreateOrUpdateResponse>;
    /**
     * The operation to update the run command.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine where the run command should be updated.
     * @param runCommandName The name of the virtual machine run command.
     * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsUpdateResponse>
     */
    update(resourceGroupName: string, vmName: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommandUpdate, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineRunCommandsUpdateResponse>;
    /**
     * The operation to delete the run command.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine where the run command should be deleted.
     * @param runCommandName The name of the virtual machine run command.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, vmName: string, runCommandName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * The operation to get the run command.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine containing the run command.
     * @param runCommandName The name of the virtual machine run command.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsGetByVirtualMachineResponse>
     */
    getByVirtualMachine(resourceGroupName: string, vmName: string, runCommandName: string, options?: Models.VirtualMachineRunCommandsGetByVirtualMachineOptionalParams): Promise<Models.VirtualMachineRunCommandsGetByVirtualMachineResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine containing the run command.
     * @param runCommandName The name of the virtual machine run command.
     * @param callback The callback
     */
    getByVirtualMachine(resourceGroupName: string, vmName: string, runCommandName: string, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommand>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine containing the run command.
     * @param runCommandName The name of the virtual machine run command.
     * @param options The optional parameters
     * @param callback The callback
     */
    getByVirtualMachine(resourceGroupName: string, vmName: string, runCommandName: string, options: Models.VirtualMachineRunCommandsGetByVirtualMachineOptionalParams, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommand>): void;
    /**
     * The operation to get all run commands of a Virtual Machine.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine containing the run command.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsListByVirtualMachineResponse>
     */
    listByVirtualMachine(resourceGroupName: string, vmName: string, options?: Models.VirtualMachineRunCommandsListByVirtualMachineOptionalParams): Promise<Models.VirtualMachineRunCommandsListByVirtualMachineResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine containing the run command.
     * @param callback The callback
     */
    listByVirtualMachine(resourceGroupName: string, vmName: string, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine containing the run command.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByVirtualMachine(resourceGroupName: string, vmName: string, options: Models.VirtualMachineRunCommandsListByVirtualMachineOptionalParams, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
    /**
     * The operation to create or update the run command.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine where the run command should be created or
     * updated.
     * @param runCommandName The name of the virtual machine run command.
     * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, vmName: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommand, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * The operation to update the run command.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine where the run command should be updated.
     * @param runCommandName The name of the virtual machine run command.
     * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, vmName: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommandUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * The operation to delete the run command.
     * @param resourceGroupName The name of the resource group.
     * @param vmName The name of the virtual machine where the run command should be deleted.
     * @param runCommandName The name of the virtual machine run command.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, vmName: string, runCommandName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists all available run commands for a subscription in a location.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineRunCommandsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RunCommandListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RunCommandListResult>): void;
    /**
     * The operation to get all run commands of a Virtual Machine.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineRunCommandsListByVirtualMachineNextResponse>
     */
    listByVirtualMachineNext(nextPageLink: string, options?: Models.VirtualMachineRunCommandsListByVirtualMachineNextOptionalParams): Promise<Models.VirtualMachineRunCommandsListByVirtualMachineNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByVirtualMachineNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByVirtualMachineNext(nextPageLink: string, options: Models.VirtualMachineRunCommandsListByVirtualMachineNextOptionalParams, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
}
//# sourceMappingURL=virtualMachineRunCommands.d.ts.map