/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/capacityReservationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a CapacityReservations. */
var CapacityReservations = /** @class */ (function () {
    /**
     * Create a CapacityReservations.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function CapacityReservations(client) {
        this.client = client;
    }
    /**
     * The operation to create or update a capacity reservation. Please note some properties can be set
     * only during capacity reservation creation. Please refer to https://aka.ms/CapacityReservation
     * for more details.
     * @param resourceGroupName The name of the resource group.
     * @param capacityReservationGroupName The name of the capacity reservation group.
     * @param capacityReservationName The name of the capacity reservation.
     * @param parameters Parameters supplied to the Create capacity reservation.
     * @param [options] The optional parameters
     * @returns Promise<Models.CapacityReservationsCreateOrUpdateResponse>
     */
    CapacityReservations.prototype.createOrUpdate = function (resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, options) {
        return this.beginCreateOrUpdate(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * The operation to update a capacity reservation.
     * @param resourceGroupName The name of the resource group.
     * @param capacityReservationGroupName The name of the capacity reservation group.
     * @param capacityReservationName The name of the capacity reservation.
     * @param parameters Parameters supplied to the Update capacity reservation operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.CapacityReservationsUpdateResponse>
     */
    CapacityReservations.prototype.update = function (resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, options) {
        return this.beginUpdate(resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * The operation to delete a capacity reservation. This operation is allowed only when all the
     * associated resources are disassociated from the capacity reservation. Please refer to
     * https://aka.ms/CapacityReservation for more details.
     * @param resourceGroupName The name of the resource group.
     * @param capacityReservationGroupName The name of the capacity reservation group.
     * @param capacityReservationName The name of the capacity reservation.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    CapacityReservations.prototype.deleteMethod = function (resourceGroupName, capacityReservationGroupName, capacityReservationName, options) {
        return this.beginDeleteMethod(resourceGroupName, capacityReservationGroupName, capacityReservationName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    CapacityReservations.prototype.get = function (resourceGroupName, capacityReservationGroupName, capacityReservationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            capacityReservationGroupName: capacityReservationGroupName,
            capacityReservationName: capacityReservationName,
            options: options
        }, getOperationSpec, callback);
    };
    CapacityReservations.prototype.listByCapacityReservationGroup = function (resourceGroupName, capacityReservationGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            capacityReservationGroupName: capacityReservationGroupName,
            options: options
        }, listByCapacityReservationGroupOperationSpec, callback);
    };
    /**
     * The operation to create or update a capacity reservation. Please note some properties can be set
     * only during capacity reservation creation. Please refer to https://aka.ms/CapacityReservation
     * for more details.
     * @param resourceGroupName The name of the resource group.
     * @param capacityReservationGroupName The name of the capacity reservation group.
     * @param capacityReservationName The name of the capacity reservation.
     * @param parameters Parameters supplied to the Create capacity reservation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    CapacityReservations.prototype.beginCreateOrUpdate = function (resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            capacityReservationGroupName: capacityReservationGroupName,
            capacityReservationName: capacityReservationName,
            parameters: parameters,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * The operation to update a capacity reservation.
     * @param resourceGroupName The name of the resource group.
     * @param capacityReservationGroupName The name of the capacity reservation group.
     * @param capacityReservationName The name of the capacity reservation.
     * @param parameters Parameters supplied to the Update capacity reservation operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    CapacityReservations.prototype.beginUpdate = function (resourceGroupName, capacityReservationGroupName, capacityReservationName, parameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            capacityReservationGroupName: capacityReservationGroupName,
            capacityReservationName: capacityReservationName,
            parameters: parameters,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    /**
     * The operation to delete a capacity reservation. This operation is allowed only when all the
     * associated resources are disassociated from the capacity reservation. Please refer to
     * https://aka.ms/CapacityReservation for more details.
     * @param resourceGroupName The name of the resource group.
     * @param capacityReservationGroupName The name of the capacity reservation group.
     * @param capacityReservationName The name of the capacity reservation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    CapacityReservations.prototype.beginDeleteMethod = function (resourceGroupName, capacityReservationGroupName, capacityReservationName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            capacityReservationGroupName: capacityReservationGroupName,
            capacityReservationName: capacityReservationName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    CapacityReservations.prototype.listByCapacityReservationGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByCapacityReservationGroupNextOperationSpec, callback);
    };
    return CapacityReservations;
}());
export { CapacityReservations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.capacityReservationGroupName,
        Parameters.capacityReservationName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.expand0,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CapacityReservation
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByCapacityReservationGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.capacityReservationGroupName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CapacityReservationListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.capacityReservationGroupName,
        Parameters.capacityReservationName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.CapacityReservation), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CapacityReservation
        },
        201: {
            bodyMapper: Mappers.CapacityReservation
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.capacityReservationGroupName,
        Parameters.capacityReservationName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.CapacityReservationUpdate), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CapacityReservation
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.capacityReservationGroupName,
        Parameters.capacityReservationName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByCapacityReservationGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CapacityReservationListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=capacityReservations.js.map