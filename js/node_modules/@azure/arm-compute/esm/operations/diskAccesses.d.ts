import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a DiskAccesses. */
export declare class DiskAccesses {
    private readonly client;
    /**
     * Create a DiskAccesses.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Creates or updates a disk access resource
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskAccess disk access object supplied in the body of the Put disk access operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, diskAccessName: string, diskAccess: Models.DiskAccess, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesCreateOrUpdateResponse>;
    /**
     * Updates (patches) a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskAccess disk access object supplied in the body of the Patch disk access operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesUpdateResponse>
     */
    update(resourceGroupName: string, diskAccessName: string, diskAccess: Models.DiskAccessUpdate, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesUpdateResponse>;
    /**
     * Gets information about a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesGetResponse>
     */
    get(resourceGroupName: string, diskAccessName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param callback The callback
     */
    get(resourceGroupName: string, diskAccessName: string, callback: msRest.ServiceCallback<Models.DiskAccess>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, diskAccessName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskAccess>): void;
    /**
     * Deletes a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, diskAccessName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Lists all the disk access resources under a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * Lists all the disk access resources under a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * Gets the private link resources possible under disk access resource
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesGetPrivateLinkResourcesResponse>
     */
    getPrivateLinkResources(resourceGroupName: string, diskAccessName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesGetPrivateLinkResourcesResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param callback The callback
     */
    getPrivateLinkResources(resourceGroupName: string, diskAccessName: string, callback: msRest.ServiceCallback<Models.PrivateLinkResourceListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    getPrivateLinkResources(resourceGroupName: string, diskAccessName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkResourceListResult>): void;
    /**
     * Approve or reject a private endpoint connection under disk access resource, this can't be used
     * to create a new private endpoint connection.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param privateEndpointConnection private endpoint connection object supplied in the body of the
     * Put private endpoint connection operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesUpdateAPrivateEndpointConnectionResponse>
     */
    updateAPrivateEndpointConnection(resourceGroupName: string, diskAccessName: string, privateEndpointConnectionName: string, privateEndpointConnection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesUpdateAPrivateEndpointConnectionResponse>;
    /**
     * Gets information about a private endpoint connection under a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesGetAPrivateEndpointConnectionResponse>
     */
    getAPrivateEndpointConnection(resourceGroupName: string, diskAccessName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesGetAPrivateEndpointConnectionResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param callback The callback
     */
    getAPrivateEndpointConnection(resourceGroupName: string, diskAccessName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param options The optional parameters
     * @param callback The callback
     */
    getAPrivateEndpointConnection(resourceGroupName: string, diskAccessName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
    /**
     * Deletes a private endpoint connection under a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteAPrivateEndpointConnection(resourceGroupName: string, diskAccessName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * List information about private endpoint connections under a disk access resource
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesListPrivateEndpointConnectionsResponse>
     */
    listPrivateEndpointConnections(resourceGroupName: string, diskAccessName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesListPrivateEndpointConnectionsResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param callback The callback
     */
    listPrivateEndpointConnections(resourceGroupName: string, diskAccessName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    listPrivateEndpointConnections(resourceGroupName: string, diskAccessName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
    /**
     * Creates or updates a disk access resource
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskAccess disk access object supplied in the body of the Put disk access operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, diskAccessName: string, diskAccess: Models.DiskAccess, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Updates (patches) a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskAccess disk access object supplied in the body of the Patch disk access operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, diskAccessName: string, diskAccess: Models.DiskAccessUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, diskAccessName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Approve or reject a private endpoint connection under disk access resource, this can't be used
     * to create a new private endpoint connection.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param privateEndpointConnection private endpoint connection object supplied in the body of the
     * Put private endpoint connection operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdateAPrivateEndpointConnection(resourceGroupName: string, diskAccessName: string, privateEndpointConnectionName: string, privateEndpointConnection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes a private endpoint connection under a disk access resource.
     * @param resourceGroupName The name of the resource group.
     * @param diskAccessName The name of the disk access resource that is being created. The name can't
     * be changed after the disk encryption set is created. Supported characters for the name are a-z,
     * A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteAPrivateEndpointConnection(resourceGroupName: string, diskAccessName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists all the disk access resources under a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * Lists all the disk access resources under a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskAccessList>): void;
    /**
     * List information about private endpoint connections under a disk access resource
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskAccessesListPrivateEndpointConnectionsNextResponse>
     */
    listPrivateEndpointConnectionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskAccessesListPrivateEndpointConnectionsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listPrivateEndpointConnectionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listPrivateEndpointConnectionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
}
//# sourceMappingURL=diskAccesses.d.ts.map