/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/restorePointsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a RestorePoints. */
var RestorePoints = /** @class */ (function () {
    /**
     * Create a RestorePoints.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function RestorePoints(client) {
        this.client = client;
    }
    /**
     * The operation to create the restore point. Updating properties of an existing restore point is
     * not allowed
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param restorePointName The name of the restore point.
     * @param parameters Parameters supplied to the Create restore point operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointsCreateResponse>
     */
    RestorePoints.prototype.create = function (resourceGroupName, restorePointCollectionName, restorePointName, parameters, options) {
        return this.beginCreate(resourceGroupName, restorePointCollectionName, restorePointName, parameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * The operation to delete the restore point.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the Restore Point Collection.
     * @param restorePointName The name of the restore point.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    RestorePoints.prototype.deleteMethod = function (resourceGroupName, restorePointCollectionName, restorePointName, options) {
        return this.beginDeleteMethod(resourceGroupName, restorePointCollectionName, restorePointName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    RestorePoints.prototype.get = function (resourceGroupName, restorePointCollectionName, restorePointName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            restorePointCollectionName: restorePointCollectionName,
            restorePointName: restorePointName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * The operation to create the restore point. Updating properties of an existing restore point is
     * not allowed
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param restorePointName The name of the restore point.
     * @param parameters Parameters supplied to the Create restore point operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    RestorePoints.prototype.beginCreate = function (resourceGroupName, restorePointCollectionName, restorePointName, parameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            restorePointCollectionName: restorePointCollectionName,
            restorePointName: restorePointName,
            parameters: parameters,
            options: options
        }, beginCreateOperationSpec, options);
    };
    /**
     * The operation to delete the restore point.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the Restore Point Collection.
     * @param restorePointName The name of the restore point.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    RestorePoints.prototype.beginDeleteMethod = function (resourceGroupName, restorePointCollectionName, restorePointName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            restorePointCollectionName: restorePointCollectionName,
            restorePointName: restorePointName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    return RestorePoints;
}());
export { RestorePoints };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.restorePointCollectionName,
        Parameters.restorePointName
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RestorePoint
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.restorePointCollectionName,
        Parameters.restorePointName
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.RestorePoint), { required: true })
    },
    responses: {
        201: {
            bodyMapper: Mappers.RestorePoint
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.restorePointCollectionName,
        Parameters.restorePointName
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=restorePoints.js.map