/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/diskRestorePointOperationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a DiskRestorePointOperations. */
var DiskRestorePointOperations = /** @class */ (function () {
    /**
     * Create a DiskRestorePointOperations.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function DiskRestorePointOperations(client) {
        this.client = client;
    }
    DiskRestorePointOperations.prototype.get = function (resourceGroupName, restorePointCollectionName, vmRestorePointName, diskRestorePointName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            restorePointCollectionName: restorePointCollectionName,
            vmRestorePointName: vmRestorePointName,
            diskRestorePointName: diskRestorePointName,
            options: options
        }, getOperationSpec, callback);
    };
    DiskRestorePointOperations.prototype.listByRestorePoint = function (resourceGroupName, restorePointCollectionName, vmRestorePointName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            restorePointCollectionName: restorePointCollectionName,
            vmRestorePointName: vmRestorePointName,
            options: options
        }, listByRestorePointOperationSpec, callback);
    };
    /**
     * Grants access to a diskRestorePoint.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection that the disk restore
     * point belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name
     * length is 80 characters.
     * @param vmRestorePointName The name of the vm restore point that the disk disk restore point
     * belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is
     * 80 characters.
     * @param diskRestorePointName The name of the disk restore point created. Supported characters for
     * the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param grantAccessData Access data object supplied in the body of the get disk access operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskRestorePointGrantAccessResponse>
     */
    DiskRestorePointOperations.prototype.grantAccess = function (resourceGroupName, restorePointCollectionName, vmRestorePointName, diskRestorePointName, grantAccessData, options) {
        return this.beginGrantAccess(resourceGroupName, restorePointCollectionName, vmRestorePointName, diskRestorePointName, grantAccessData, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Revokes access to a diskRestorePoint.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection that the disk restore
     * point belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name
     * length is 80 characters.
     * @param vmRestorePointName The name of the vm restore point that the disk disk restore point
     * belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is
     * 80 characters.
     * @param diskRestorePointName The name of the disk restore point created. Supported characters for
     * the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    DiskRestorePointOperations.prototype.revokeAccess = function (resourceGroupName, restorePointCollectionName, vmRestorePointName, diskRestorePointName, options) {
        return this.beginRevokeAccess(resourceGroupName, restorePointCollectionName, vmRestorePointName, diskRestorePointName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Grants access to a diskRestorePoint.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection that the disk restore
     * point belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name
     * length is 80 characters.
     * @param vmRestorePointName The name of the vm restore point that the disk disk restore point
     * belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is
     * 80 characters.
     * @param diskRestorePointName The name of the disk restore point created. Supported characters for
     * the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param grantAccessData Access data object supplied in the body of the get disk access operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    DiskRestorePointOperations.prototype.beginGrantAccess = function (resourceGroupName, restorePointCollectionName, vmRestorePointName, diskRestorePointName, grantAccessData, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            restorePointCollectionName: restorePointCollectionName,
            vmRestorePointName: vmRestorePointName,
            diskRestorePointName: diskRestorePointName,
            grantAccessData: grantAccessData,
            options: options
        }, beginGrantAccessOperationSpec, options);
    };
    /**
     * Revokes access to a diskRestorePoint.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection that the disk restore
     * point belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name
     * length is 80 characters.
     * @param vmRestorePointName The name of the vm restore point that the disk disk restore point
     * belongs. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is
     * 80 characters.
     * @param diskRestorePointName The name of the disk restore point created. Supported characters for
     * the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    DiskRestorePointOperations.prototype.beginRevokeAccess = function (resourceGroupName, restorePointCollectionName, vmRestorePointName, diskRestorePointName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            restorePointCollectionName: restorePointCollectionName,
            vmRestorePointName: vmRestorePointName,
            diskRestorePointName: diskRestorePointName,
            options: options
        }, beginRevokeAccessOperationSpec, options);
    };
    DiskRestorePointOperations.prototype.listByRestorePointNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByRestorePointNextOperationSpec, callback);
    };
    return DiskRestorePointOperations;
}());
export { DiskRestorePointOperations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.restorePointCollectionName,
        Parameters.vmRestorePointName,
        Parameters.diskRestorePointName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DiskRestorePoint
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByRestorePointOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.restorePointCollectionName,
        Parameters.vmRestorePointName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DiskRestorePointList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginGrantAccessOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/beginGetAccess",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.restorePointCollectionName,
        Parameters.vmRestorePointName,
        Parameters.diskRestorePointName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "grantAccessData",
        mapper: __assign(__assign({}, Mappers.GrantAccessData), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.AccessUri
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginRevokeAccessOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/endGetAccess",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.restorePointCollectionName,
        Parameters.vmRestorePointName,
        Parameters.diskRestorePointName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByRestorePointNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DiskRestorePointList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=diskRestorePointOperations.js.map