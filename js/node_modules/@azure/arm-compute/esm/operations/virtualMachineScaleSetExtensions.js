/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/virtualMachineScaleSetExtensionsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a VirtualMachineScaleSetExtensions. */
var VirtualMachineScaleSetExtensions = /** @class */ (function () {
    /**
     * Create a VirtualMachineScaleSetExtensions.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function VirtualMachineScaleSetExtensions(client) {
        this.client = client;
    }
    /**
     * The operation to create or update an extension.
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set where the extension should be create or
     * updated.
     * @param vmssExtensionName The name of the VM scale set extension.
     * @param extensionParameters Parameters supplied to the Create VM scale set Extension operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineScaleSetExtensionsCreateOrUpdateResponse>
     */
    VirtualMachineScaleSetExtensions.prototype.createOrUpdate = function (resourceGroupName, vmScaleSetName, vmssExtensionName, extensionParameters, options) {
        return this.beginCreateOrUpdate(resourceGroupName, vmScaleSetName, vmssExtensionName, extensionParameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * The operation to update an extension.
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set where the extension should be updated.
     * @param vmssExtensionName The name of the VM scale set extension.
     * @param extensionParameters Parameters supplied to the Update VM scale set Extension operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineScaleSetExtensionsUpdateResponse>
     */
    VirtualMachineScaleSetExtensions.prototype.update = function (resourceGroupName, vmScaleSetName, vmssExtensionName, extensionParameters, options) {
        return this.beginUpdate(resourceGroupName, vmScaleSetName, vmssExtensionName, extensionParameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * The operation to delete the extension.
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set where the extension should be deleted.
     * @param vmssExtensionName The name of the VM scale set extension.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    VirtualMachineScaleSetExtensions.prototype.deleteMethod = function (resourceGroupName, vmScaleSetName, vmssExtensionName, options) {
        return this.beginDeleteMethod(resourceGroupName, vmScaleSetName, vmssExtensionName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    VirtualMachineScaleSetExtensions.prototype.get = function (resourceGroupName, vmScaleSetName, vmssExtensionName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            vmScaleSetName: vmScaleSetName,
            vmssExtensionName: vmssExtensionName,
            options: options
        }, getOperationSpec, callback);
    };
    VirtualMachineScaleSetExtensions.prototype.list = function (resourceGroupName, vmScaleSetName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            vmScaleSetName: vmScaleSetName,
            options: options
        }, listOperationSpec, callback);
    };
    /**
     * The operation to create or update an extension.
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set where the extension should be create or
     * updated.
     * @param vmssExtensionName The name of the VM scale set extension.
     * @param extensionParameters Parameters supplied to the Create VM scale set Extension operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    VirtualMachineScaleSetExtensions.prototype.beginCreateOrUpdate = function (resourceGroupName, vmScaleSetName, vmssExtensionName, extensionParameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            vmScaleSetName: vmScaleSetName,
            vmssExtensionName: vmssExtensionName,
            extensionParameters: extensionParameters,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * The operation to update an extension.
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set where the extension should be updated.
     * @param vmssExtensionName The name of the VM scale set extension.
     * @param extensionParameters Parameters supplied to the Update VM scale set Extension operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    VirtualMachineScaleSetExtensions.prototype.beginUpdate = function (resourceGroupName, vmScaleSetName, vmssExtensionName, extensionParameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            vmScaleSetName: vmScaleSetName,
            vmssExtensionName: vmssExtensionName,
            extensionParameters: extensionParameters,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    /**
     * The operation to delete the extension.
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set where the extension should be deleted.
     * @param vmssExtensionName The name of the VM scale set extension.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    VirtualMachineScaleSetExtensions.prototype.beginDeleteMethod = function (resourceGroupName, vmScaleSetName, vmssExtensionName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            vmScaleSetName: vmScaleSetName,
            vmssExtensionName: vmssExtensionName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    VirtualMachineScaleSetExtensions.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    return VirtualMachineScaleSetExtensions;
}());
export { VirtualMachineScaleSetExtensions };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.vmssExtensionName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.expand0,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VirtualMachineScaleSetExtension
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VirtualMachineScaleSetExtensionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.vmssExtensionName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "extensionParameters",
        mapper: __assign(__assign({}, Mappers.VirtualMachineScaleSetExtension), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.VirtualMachineScaleSetExtension
        },
        201: {
            bodyMapper: Mappers.VirtualMachineScaleSetExtension
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.vmssExtensionName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "extensionParameters",
        mapper: __assign(__assign({}, Mappers.VirtualMachineScaleSetExtensionUpdate), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.VirtualMachineScaleSetExtension
        },
        201: {
            bodyMapper: Mappers.VirtualMachineScaleSetExtension
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.vmssExtensionName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VirtualMachineScaleSetExtensionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=virtualMachineScaleSetExtensions.js.map