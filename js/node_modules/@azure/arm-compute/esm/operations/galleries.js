/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/galleriesMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Galleries. */
var Galleries = /** @class */ (function () {
    /**
     * Create a Galleries.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function Galleries(client) {
        this.client = client;
    }
    /**
     * Create or update a Shared Image Gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets
     * and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Parameters supplied to the create or update Shared Image Gallery operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleriesCreateOrUpdateResponse>
     */
    Galleries.prototype.createOrUpdate = function (resourceGroupName, galleryName, gallery, options) {
        return this.beginCreateOrUpdate(resourceGroupName, galleryName, gallery, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Update a Shared Image Gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets
     * and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Parameters supplied to the update Shared Image Gallery operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleriesUpdateResponse>
     */
    Galleries.prototype.update = function (resourceGroupName, galleryName, gallery, options) {
        return this.beginUpdate(resourceGroupName, galleryName, gallery, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    Galleries.prototype.get = function (resourceGroupName, galleryName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Delete a Shared Image Gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    Galleries.prototype.deleteMethod = function (resourceGroupName, galleryName, options) {
        return this.beginDeleteMethod(resourceGroupName, galleryName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    Galleries.prototype.listByResourceGroup = function (resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            options: options
        }, listByResourceGroupOperationSpec, callback);
    };
    Galleries.prototype.list = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listOperationSpec, callback);
    };
    /**
     * Create or update a Shared Image Gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets
     * and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Parameters supplied to the create or update Shared Image Gallery operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Galleries.prototype.beginCreateOrUpdate = function (resourceGroupName, galleryName, gallery, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            gallery: gallery,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Update a Shared Image Gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets
     * and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Parameters supplied to the update Shared Image Gallery operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Galleries.prototype.beginUpdate = function (resourceGroupName, galleryName, gallery, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            gallery: gallery,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    /**
     * Delete a Shared Image Gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Galleries.prototype.beginDeleteMethod = function (resourceGroupName, galleryName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    Galleries.prototype.listByResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByResourceGroupNextOperationSpec, callback);
    };
    Galleries.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    return Galleries;
}());
export { Galleries };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName
    ],
    queryParameters: [
        Parameters.apiVersion3,
        Parameters.select
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Gallery
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/galleries",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "gallery",
        mapper: __assign(__assign({}, Mappers.Gallery), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Gallery
        },
        201: {
            bodyMapper: Mappers.Gallery
        },
        202: {
            bodyMapper: Mappers.Gallery
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "gallery",
        mapper: __assign(__assign({}, Mappers.GalleryUpdate), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Gallery
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=galleries.js.map