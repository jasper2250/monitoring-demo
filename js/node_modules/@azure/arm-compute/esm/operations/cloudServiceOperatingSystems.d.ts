import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a CloudServiceOperatingSystems. */
export declare class CloudServiceOperatingSystems {
    private readonly client;
    /**
     * Create a CloudServiceOperatingSystems.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Gets properties of a guest operating system version that can be specified in the XML service
     * configuration (.cscfg) for a cloud service.
     * @param location Name of the location that the OS version pertains to.
     * @param osVersionName Name of the OS version.
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceOperatingSystemsGetOSVersionResponse>
     */
    getOSVersion(location: string, osVersionName: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceOperatingSystemsGetOSVersionResponse>;
    /**
     * @param location Name of the location that the OS version pertains to.
     * @param osVersionName Name of the OS version.
     * @param callback The callback
     */
    getOSVersion(location: string, osVersionName: string, callback: msRest.ServiceCallback<Models.OSVersion>): void;
    /**
     * @param location Name of the location that the OS version pertains to.
     * @param osVersionName Name of the OS version.
     * @param options The optional parameters
     * @param callback The callback
     */
    getOSVersion(location: string, osVersionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OSVersion>): void;
    /**
     * Gets a list of all guest operating system versions available to be specified in the XML service
     * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the
     * next page of OS versions. Do this till nextLink is null to fetch all the OS versions.
     * @param location Name of the location that the OS versions pertain to.
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceOperatingSystemsListOSVersionsResponse>
     */
    listOSVersions(location: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceOperatingSystemsListOSVersionsResponse>;
    /**
     * @param location Name of the location that the OS versions pertain to.
     * @param callback The callback
     */
    listOSVersions(location: string, callback: msRest.ServiceCallback<Models.OSVersionListResult>): void;
    /**
     * @param location Name of the location that the OS versions pertain to.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOSVersions(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OSVersionListResult>): void;
    /**
     * Gets properties of a guest operating system family that can be specified in the XML service
     * configuration (.cscfg) for a cloud service.
     * @param location Name of the location that the OS family pertains to.
     * @param osFamilyName Name of the OS family.
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceOperatingSystemsGetOSFamilyResponse>
     */
    getOSFamily(location: string, osFamilyName: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceOperatingSystemsGetOSFamilyResponse>;
    /**
     * @param location Name of the location that the OS family pertains to.
     * @param osFamilyName Name of the OS family.
     * @param callback The callback
     */
    getOSFamily(location: string, osFamilyName: string, callback: msRest.ServiceCallback<Models.OSFamily>): void;
    /**
     * @param location Name of the location that the OS family pertains to.
     * @param osFamilyName Name of the OS family.
     * @param options The optional parameters
     * @param callback The callback
     */
    getOSFamily(location: string, osFamilyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OSFamily>): void;
    /**
     * Gets a list of all guest operating system families available to be specified in the XML service
     * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the
     * next page of OS Families. Do this till nextLink is null to fetch all the OS Families.
     * @param location Name of the location that the OS families pertain to.
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceOperatingSystemsListOSFamiliesResponse>
     */
    listOSFamilies(location: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceOperatingSystemsListOSFamiliesResponse>;
    /**
     * @param location Name of the location that the OS families pertain to.
     * @param callback The callback
     */
    listOSFamilies(location: string, callback: msRest.ServiceCallback<Models.OSFamilyListResult>): void;
    /**
     * @param location Name of the location that the OS families pertain to.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOSFamilies(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OSFamilyListResult>): void;
    /**
     * Gets a list of all guest operating system versions available to be specified in the XML service
     * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the
     * next page of OS versions. Do this till nextLink is null to fetch all the OS versions.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceOperatingSystemsListOSVersionsNextResponse>
     */
    listOSVersionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceOperatingSystemsListOSVersionsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listOSVersionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OSVersionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOSVersionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OSVersionListResult>): void;
    /**
     * Gets a list of all guest operating system families available to be specified in the XML service
     * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the
     * next page of OS Families. Do this till nextLink is null to fetch all the OS Families.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceOperatingSystemsListOSFamiliesNextResponse>
     */
    listOSFamiliesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceOperatingSystemsListOSFamiliesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listOSFamiliesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OSFamilyListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOSFamiliesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OSFamilyListResult>): void;
}
//# sourceMappingURL=cloudServiceOperatingSystems.d.ts.map