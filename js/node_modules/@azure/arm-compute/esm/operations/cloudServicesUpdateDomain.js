/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/cloudServicesUpdateDomainMappers";
import * as Parameters from "../models/parameters";
/** Class representing a CloudServicesUpdateDomain. */
var CloudServicesUpdateDomain = /** @class */ (function () {
    /**
     * Create a CloudServicesUpdateDomain.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function CloudServicesUpdateDomain(client) {
        this.client = client;
    }
    /**
     * Updates the role instances in the specified update domain.
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param updateDomain Specifies an integer value that identifies the update domain. Update domains
     * are identified with a zero-based index: the first update domain has an ID of 0, the second has
     * an ID of 1, and so on.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    CloudServicesUpdateDomain.prototype.walkUpdateDomain = function (resourceGroupName, cloudServiceName, updateDomain, options) {
        return this.beginWalkUpdateDomain(resourceGroupName, cloudServiceName, updateDomain, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    CloudServicesUpdateDomain.prototype.getUpdateDomain = function (resourceGroupName, cloudServiceName, updateDomain, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            cloudServiceName: cloudServiceName,
            updateDomain: updateDomain,
            options: options
        }, getUpdateDomainOperationSpec, callback);
    };
    CloudServicesUpdateDomain.prototype.listUpdateDomains = function (resourceGroupName, cloudServiceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            cloudServiceName: cloudServiceName,
            options: options
        }, listUpdateDomainsOperationSpec, callback);
    };
    /**
     * Updates the role instances in the specified update domain.
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param updateDomain Specifies an integer value that identifies the update domain. Update domains
     * are identified with a zero-based index: the first update domain has an ID of 0, the second has
     * an ID of 1, and so on.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    CloudServicesUpdateDomain.prototype.beginWalkUpdateDomain = function (resourceGroupName, cloudServiceName, updateDomain, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            cloudServiceName: cloudServiceName,
            updateDomain: updateDomain,
            options: options
        }, beginWalkUpdateDomainOperationSpec, options);
    };
    CloudServicesUpdateDomain.prototype.listUpdateDomainsNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listUpdateDomainsNextOperationSpec, callback);
    };
    return CloudServicesUpdateDomain;
}());
export { CloudServicesUpdateDomain };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getUpdateDomainOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/{updateDomain}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.cloudServiceName,
        Parameters.updateDomain,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.UpdateDomain
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listUpdateDomainsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.cloudServiceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.UpdateDomainListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginWalkUpdateDomainOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/{updateDomain}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.cloudServiceName,
        Parameters.updateDomain,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: [
            "options",
            "parameters"
        ],
        mapper: Mappers.UpdateDomain
    },
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listUpdateDomainsNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.UpdateDomainListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=cloudServicesUpdateDomain.js.map