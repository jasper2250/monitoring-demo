import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a SharedGalleryImages. */
export declare class SharedGalleryImages {
    private readonly client;
    /**
     * Create a SharedGalleryImages.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * List shared gallery images by subscription id or tenant id.
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param [options] The optional parameters
     * @returns Promise<Models.SharedGalleryImagesListResponse>
     */
    list(location: string, galleryUniqueName: string, options?: Models.SharedGalleryImagesListOptionalParams): Promise<Models.SharedGalleryImagesListResponse>;
    /**
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param callback The callback
     */
    list(location: string, galleryUniqueName: string, callback: msRest.ServiceCallback<Models.SharedGalleryImageList>): void;
    /**
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(location: string, galleryUniqueName: string, options: Models.SharedGalleryImagesListOptionalParams, callback: msRest.ServiceCallback<Models.SharedGalleryImageList>): void;
    /**
     * Get a shared gallery image by subscription id or tenant id.
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image
     * Versions are to be listed.
     * @param [options] The optional parameters
     * @returns Promise<Models.SharedGalleryImagesGetResponse>
     */
    get(location: string, galleryUniqueName: string, galleryImageName: string, options?: msRest.RequestOptionsBase): Promise<Models.SharedGalleryImagesGetResponse>;
    /**
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image
     * Versions are to be listed.
     * @param callback The callback
     */
    get(location: string, galleryUniqueName: string, galleryImageName: string, callback: msRest.ServiceCallback<Models.SharedGalleryImage>): void;
    /**
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image
     * Versions are to be listed.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(location: string, galleryUniqueName: string, galleryImageName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedGalleryImage>): void;
    /**
     * List shared gallery images by subscription id or tenant id.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SharedGalleryImagesListNextResponse>
     */
    listNext(nextPageLink: string, options?: Models.SharedGalleryImagesListNextOptionalParams): Promise<Models.SharedGalleryImagesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SharedGalleryImageList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: Models.SharedGalleryImagesListNextOptionalParams, callback: msRest.ServiceCallback<Models.SharedGalleryImageList>): void;
}
//# sourceMappingURL=sharedGalleryImages.d.ts.map