import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a VirtualMachineImagesEdgeZone. */
export declare class VirtualMachineImagesEdgeZone {
    private readonly client;
    /**
     * Create a VirtualMachineImagesEdgeZone.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Gets a virtual machine image in an edge zone.
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param skus A valid image SKU.
     * @param version A valid image SKU version.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineImagesEdgeZoneGetResponse>
     */
    get(location: string, edgeZone: string, publisherName: string, offer: string, skus: string, version: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineImagesEdgeZoneGetResponse>;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param skus A valid image SKU.
     * @param version A valid image SKU version.
     * @param callback The callback
     */
    get(location: string, edgeZone: string, publisherName: string, offer: string, skus: string, version: string, callback: msRest.ServiceCallback<Models.VirtualMachineImage>): void;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param skus A valid image SKU.
     * @param version A valid image SKU version.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(location: string, edgeZone: string, publisherName: string, offer: string, skus: string, version: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualMachineImage>): void;
    /**
     * Gets a list of all virtual machine image versions for the specified location, edge zone,
     * publisher, offer, and SKU.
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param skus A valid image SKU.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineImagesEdgeZoneListResponse>
     */
    list(location: string, edgeZone: string, publisherName: string, offer: string, skus: string, options?: Models.VirtualMachineImagesEdgeZoneListOptionalParams): Promise<Models.VirtualMachineImagesEdgeZoneListResponse>;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param skus A valid image SKU.
     * @param callback The callback
     */
    list(location: string, edgeZone: string, publisherName: string, offer: string, skus: string, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param skus A valid image SKU.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(location: string, edgeZone: string, publisherName: string, offer: string, skus: string, options: Models.VirtualMachineImagesEdgeZoneListOptionalParams, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
    /**
     * Gets a list of virtual machine image offers for the specified location, edge zone and publisher.
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineImagesEdgeZoneListOffersResponse>
     */
    listOffers(location: string, edgeZone: string, publisherName: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineImagesEdgeZoneListOffersResponse>;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param callback The callback
     */
    listOffers(location: string, edgeZone: string, publisherName: string, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOffers(location: string, edgeZone: string, publisherName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
    /**
     * Gets a list of virtual machine image publishers for the specified Azure location and edge zone.
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineImagesEdgeZoneListPublishersResponse>
     */
    listPublishers(location: string, edgeZone: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineImagesEdgeZoneListPublishersResponse>;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param callback The callback
     */
    listPublishers(location: string, edgeZone: string, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param options The optional parameters
     * @param callback The callback
     */
    listPublishers(location: string, edgeZone: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
    /**
     * Gets a list of virtual machine image SKUs for the specified location, edge zone, publisher, and
     * offer.
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param [options] The optional parameters
     * @returns Promise<Models.VirtualMachineImagesEdgeZoneListSkusResponse>
     */
    listSkus(location: string, edgeZone: string, publisherName: string, offer: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineImagesEdgeZoneListSkusResponse>;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param callback The callback
     */
    listSkus(location: string, edgeZone: string, publisherName: string, offer: string, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
    /**
     * @param location The name of a supported Azure region.
     * @param edgeZone The name of the edge zone.
     * @param publisherName A valid image publisher.
     * @param offer A valid image publisher offer.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSkus(location: string, edgeZone: string, publisherName: string, offer: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualMachineImageResource[]>): void;
}
//# sourceMappingURL=virtualMachineImagesEdgeZone.d.ts.map