import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a LogAnalytics. */
export declare class LogAnalytics {
    private readonly client;
    /**
     * Create a LogAnalytics.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Export logs that show Api requests made by this subscription in the given time window to show
     * throttling activities.
     * @param parameters Parameters supplied to the LogAnalytics getRequestRateByInterval Api.
     * @param location The location upon which virtual-machine-sizes is queried.
     * @param [options] The optional parameters
     * @returns Promise<Models.LogAnalyticsExportRequestRateByIntervalResponse>
     */
    exportRequestRateByInterval(parameters: Models.RequestRateByIntervalInput, location: string, options?: msRest.RequestOptionsBase): Promise<Models.LogAnalyticsExportRequestRateByIntervalResponse>;
    /**
     * Export logs that show total throttled Api requests for this subscription in the given time
     * window.
     * @param parameters Parameters supplied to the LogAnalytics getThrottledRequests Api.
     * @param location The location upon which virtual-machine-sizes is queried.
     * @param [options] The optional parameters
     * @returns Promise<Models.LogAnalyticsExportThrottledRequestsResponse>
     */
    exportThrottledRequests(parameters: Models.ThrottledRequestsInput, location: string, options?: msRest.RequestOptionsBase): Promise<Models.LogAnalyticsExportThrottledRequestsResponse>;
    /**
     * Export logs that show Api requests made by this subscription in the given time window to show
     * throttling activities.
     * @param parameters Parameters supplied to the LogAnalytics getRequestRateByInterval Api.
     * @param location The location upon which virtual-machine-sizes is queried.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginExportRequestRateByInterval(parameters: Models.RequestRateByIntervalInput, location: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Export logs that show total throttled Api requests for this subscription in the given time
     * window.
     * @param parameters Parameters supplied to the LogAnalytics getThrottledRequests Api.
     * @param location The location upon which virtual-machine-sizes is queried.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginExportThrottledRequests(parameters: Models.ThrottledRequestsInput, location: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
}
//# sourceMappingURL=logAnalytics.d.ts.map