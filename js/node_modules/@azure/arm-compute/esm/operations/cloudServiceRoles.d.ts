import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a CloudServiceRoles. */
export declare class CloudServiceRoles {
    private readonly client;
    /**
     * Create a CloudServiceRoles.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Gets a role from a cloud service.
     * @param roleName Name of the role.
     * @param resourceGroupName
     * @param cloudServiceName
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceRolesGetResponse>
     */
    get(roleName: string, resourceGroupName: string, cloudServiceName: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceRolesGetResponse>;
    /**
     * @param roleName Name of the role.
     * @param resourceGroupName
     * @param cloudServiceName
     * @param callback The callback
     */
    get(roleName: string, resourceGroupName: string, cloudServiceName: string, callback: msRest.ServiceCallback<Models.CloudServiceRole>): void;
    /**
     * @param roleName Name of the role.
     * @param resourceGroupName
     * @param cloudServiceName
     * @param options The optional parameters
     * @param callback The callback
     */
    get(roleName: string, resourceGroupName: string, cloudServiceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CloudServiceRole>): void;
    /**
     * Gets a list of all roles in a cloud service. Use nextLink property in the response to get the
     * next page of roles. Do this till nextLink is null to fetch all the roles.
     * @param resourceGroupName
     * @param cloudServiceName
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceRolesListResponse>
     */
    list(resourceGroupName: string, cloudServiceName: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceRolesListResponse>;
    /**
     * @param resourceGroupName
     * @param cloudServiceName
     * @param callback The callback
     */
    list(resourceGroupName: string, cloudServiceName: string, callback: msRest.ServiceCallback<Models.CloudServiceRoleListResult>): void;
    /**
     * @param resourceGroupName
     * @param cloudServiceName
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, cloudServiceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CloudServiceRoleListResult>): void;
    /**
     * Gets a list of all roles in a cloud service. Use nextLink property in the response to get the
     * next page of roles. Do this till nextLink is null to fetch all the roles.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.CloudServiceRolesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.CloudServiceRolesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CloudServiceRoleListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CloudServiceRoleListResult>): void;
}
//# sourceMappingURL=cloudServiceRoles.d.ts.map