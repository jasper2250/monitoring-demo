/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/gallerySharingProfileMappers";
import * as Parameters from "../models/parameters";
/** Class representing a GallerySharingProfile. */
var GallerySharingProfile = /** @class */ (function () {
    /**
     * Create a GallerySharingProfile.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function GallerySharingProfile(client) {
        this.client = client;
    }
    /**
     * Update sharing profile of a gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery.
     * @param sharingUpdate Parameters supplied to the update gallery sharing profile.
     * @param [options] The optional parameters
     * @returns Promise<Models.GallerySharingProfileUpdateResponse>
     */
    GallerySharingProfile.prototype.update = function (resourceGroupName, galleryName, sharingUpdate, options) {
        return this.beginUpdate(resourceGroupName, galleryName, sharingUpdate, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Update sharing profile of a gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery.
     * @param sharingUpdate Parameters supplied to the update gallery sharing profile.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    GallerySharingProfile.prototype.beginUpdate = function (resourceGroupName, galleryName, sharingUpdate, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            sharingUpdate: sharingUpdate,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    return GallerySharingProfile;
}());
export { GallerySharingProfile };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var beginUpdateOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/share",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "sharingUpdate",
        mapper: __assign(__assign({}, Mappers.SharingUpdate), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.SharingUpdate
        },
        202: {
            bodyMapper: Mappers.SharingUpdate
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=gallerySharingProfile.js.map