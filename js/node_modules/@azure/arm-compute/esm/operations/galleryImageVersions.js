/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/galleryImageVersionsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a GalleryImageVersions. */
var GalleryImageVersions = /** @class */ (function () {
    /**
     * Create a GalleryImageVersions.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function GalleryImageVersions(client) {
        this.client = client;
    }
    /**
     * Create or update a gallery image version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery image definition in which the Image Version is
     * to be created.
     * @param galleryImageVersionName The name of the gallery image version to be created. Needs to
     * follow semantic version name pattern: The allowed characters are digit and period. Digits must
     * be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryImageVersion Parameters supplied to the create or update gallery image version
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryImageVersionsCreateOrUpdateResponse>
     */
    GalleryImageVersions.prototype.createOrUpdate = function (resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion, options) {
        return this.beginCreateOrUpdate(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Update a gallery image version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery image definition in which the Image Version is
     * to be updated.
     * @param galleryImageVersionName The name of the gallery image version to be updated. Needs to
     * follow semantic version name pattern: The allowed characters are digit and period. Digits must
     * be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryImageVersion Parameters supplied to the update gallery image version operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryImageVersionsUpdateResponse>
     */
    GalleryImageVersions.prototype.update = function (resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion, options) {
        return this.beginUpdate(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    GalleryImageVersions.prototype.get = function (resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryImageName: galleryImageName,
            galleryImageVersionName: galleryImageVersionName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Delete a gallery image version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery image definition in which the Image Version
     * resides.
     * @param galleryImageVersionName The name of the gallery image version to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    GalleryImageVersions.prototype.deleteMethod = function (resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, options) {
        return this.beginDeleteMethod(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    GalleryImageVersions.prototype.listByGalleryImage = function (resourceGroupName, galleryName, galleryImageName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryImageName: galleryImageName,
            options: options
        }, listByGalleryImageOperationSpec, callback);
    };
    /**
     * Create or update a gallery image version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery image definition in which the Image Version is
     * to be created.
     * @param galleryImageVersionName The name of the gallery image version to be created. Needs to
     * follow semantic version name pattern: The allowed characters are digit and period. Digits must
     * be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryImageVersion Parameters supplied to the create or update gallery image version
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    GalleryImageVersions.prototype.beginCreateOrUpdate = function (resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryImageName: galleryImageName,
            galleryImageVersionName: galleryImageVersionName,
            galleryImageVersion: galleryImageVersion,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Update a gallery image version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery image definition in which the Image Version is
     * to be updated.
     * @param galleryImageVersionName The name of the gallery image version to be updated. Needs to
     * follow semantic version name pattern: The allowed characters are digit and period. Digits must
     * be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param galleryImageVersion Parameters supplied to the update gallery image version operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    GalleryImageVersions.prototype.beginUpdate = function (resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryImageName: galleryImageName,
            galleryImageVersionName: galleryImageVersionName,
            galleryImageVersion: galleryImageVersion,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    /**
     * Delete a gallery image version.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery image definition in which the Image Version
     * resides.
     * @param galleryImageVersionName The name of the gallery image version to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    GalleryImageVersions.prototype.beginDeleteMethod = function (resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            galleryName: galleryName,
            galleryImageName: galleryImageName,
            galleryImageVersionName: galleryImageVersionName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    GalleryImageVersions.prototype.listByGalleryImageNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByGalleryImageNextOperationSpec, callback);
    };
    return GalleryImageVersions;
}());
export { GalleryImageVersions };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryImageName,
        Parameters.galleryImageVersionName
    ],
    queryParameters: [
        Parameters.expand0,
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryImageVersion
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGalleryImageOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryImageName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryImageVersionList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryImageName,
        Parameters.galleryImageVersionName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "galleryImageVersion",
        mapper: __assign(__assign({}, Mappers.GalleryImageVersion), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.GalleryImageVersion
        },
        201: {
            bodyMapper: Mappers.GalleryImageVersion
        },
        202: {
            bodyMapper: Mappers.GalleryImageVersion
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryImageName,
        Parameters.galleryImageVersionName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "galleryImageVersion",
        mapper: __assign(__assign({}, Mappers.GalleryImageVersionUpdate), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.GalleryImageVersion
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.galleryName,
        Parameters.galleryImageName,
        Parameters.galleryImageVersionName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGalleryImageNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.GalleryImageVersionList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=galleryImageVersions.js.map