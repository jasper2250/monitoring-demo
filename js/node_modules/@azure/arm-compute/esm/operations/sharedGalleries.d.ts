import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a SharedGalleries. */
export declare class SharedGalleries {
    private readonly client;
    /**
     * Create a SharedGalleries.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * List shared galleries by subscription id or tenant id.
     * @param location Resource location.
     * @param [options] The optional parameters
     * @returns Promise<Models.SharedGalleriesListResponse>
     */
    list(location: string, options?: Models.SharedGalleriesListOptionalParams): Promise<Models.SharedGalleriesListResponse>;
    /**
     * @param location Resource location.
     * @param callback The callback
     */
    list(location: string, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
    /**
     * @param location Resource location.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(location: string, options: Models.SharedGalleriesListOptionalParams, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
    /**
     * Get a shared gallery by subscription id or tenant id.
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param [options] The optional parameters
     * @returns Promise<Models.SharedGalleriesGetResponse>
     */
    get(location: string, galleryUniqueName: string, options?: msRest.RequestOptionsBase): Promise<Models.SharedGalleriesGetResponse>;
    /**
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param callback The callback
     */
    get(location: string, galleryUniqueName: string, callback: msRest.ServiceCallback<Models.SharedGallery>): void;
    /**
     * @param location Resource location.
     * @param galleryUniqueName The unique name of the Shared Gallery.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(location: string, galleryUniqueName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedGallery>): void;
    /**
     * List shared galleries by subscription id or tenant id.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SharedGalleriesListNextResponse>
     */
    listNext(nextPageLink: string, options?: Models.SharedGalleriesListNextOptionalParams): Promise<Models.SharedGalleriesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: Models.SharedGalleriesListNextOptionalParams, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
}
//# sourceMappingURL=sharedGalleries.d.ts.map