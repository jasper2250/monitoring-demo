import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a SshPublicKeys. */
export declare class SshPublicKeys {
    private readonly client;
    /**
     * Create a SshPublicKeys.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Lists all of the SSH public keys in the subscription. Use the nextLink property in the response
     * to get the next page of SSH public keys.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysListBySubscriptionResponse>
     */
    listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListBySubscriptionResponse>;
    /**
     * @param callback The callback
     */
    listBySubscription(callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
    /**
     * Lists all of the SSH public keys in the specified resource group. Use the nextLink property in
     * the response to get the next page of SSH public keys.
     * @param resourceGroupName The name of the resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
    /**
     * Creates a new SSH public key resource.
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param parameters Parameters supplied to create the SSH public key.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysCreateResponse>
     */
    create(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyResource, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysCreateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param parameters Parameters supplied to create the SSH public key.
     * @param callback The callback
     */
    create(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyResource, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param parameters Parameters supplied to create the SSH public key.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
    /**
     * Updates a new SSH public key resource.
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param parameters Parameters supplied to update the SSH public key.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysUpdateResponse>
     */
    update(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyUpdateResource, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param parameters Parameters supplied to update the SSH public key.
     * @param callback The callback
     */
    update(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyUpdateResource, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param parameters Parameters supplied to update the SSH public key.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyUpdateResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
    /**
     * Delete an SSH public key.
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, sshPublicKeyName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, sshPublicKeyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Retrieves information about an SSH public key.
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysGetResponse>
     */
    get(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param callback The callback
     */
    get(resourceGroupName: string, sshPublicKeyName: string, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, sshPublicKeyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
    /**
     * Generates and returns a public/private key pair and populates the SSH public key resource with
     * the public key. The length of the key will be 3072 bits. This operation can only be performed
     * once per SSH public key resource.
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysGenerateKeyPairResponse>
     */
    generateKeyPair(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysGenerateKeyPairResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param callback The callback
     */
    generateKeyPair(resourceGroupName: string, sshPublicKeyName: string, callback: msRest.ServiceCallback<Models.SshPublicKeyGenerateKeyPairResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param sshPublicKeyName The name of the SSH public key.
     * @param options The optional parameters
     * @param callback The callback
     */
    generateKeyPair(resourceGroupName: string, sshPublicKeyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyGenerateKeyPairResult>): void;
    /**
     * Lists all of the SSH public keys in the subscription. Use the nextLink property in the response
     * to get the next page of SSH public keys.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
    /**
     * Lists all of the SSH public keys in the specified resource group. Use the nextLink property in
     * the response to get the next page of SSH public keys.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SshPublicKeysListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
}
//# sourceMappingURL=sshPublicKeys.d.ts.map