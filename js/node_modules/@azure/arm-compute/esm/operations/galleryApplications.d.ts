import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a GalleryApplications. */
export declare class GalleryApplications {
    private readonly client;
    /**
     * Create a GalleryApplications.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Create or update a gallery Application Definition.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition is to be created.
     * @param galleryApplicationName The name of the gallery Application Definition to be created or
     * updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed
     * in the middle. The maximum length is 80 characters.
     * @param galleryApplication Parameters supplied to the create or update gallery Application
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryApplicationsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, galleryName: string, galleryApplicationName: string, galleryApplication: Models.GalleryApplication, options?: msRest.RequestOptionsBase): Promise<Models.GalleryApplicationsCreateOrUpdateResponse>;
    /**
     * Update a gallery Application Definition.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition is to be updated.
     * @param galleryApplicationName The name of the gallery Application Definition to be updated. The
     * allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the
     * middle. The maximum length is 80 characters.
     * @param galleryApplication Parameters supplied to the update gallery Application operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryApplicationsUpdateResponse>
     */
    update(resourceGroupName: string, galleryName: string, galleryApplicationName: string, galleryApplication: Models.GalleryApplicationUpdate, options?: msRest.RequestOptionsBase): Promise<Models.GalleryApplicationsUpdateResponse>;
    /**
     * Retrieves information about a gallery Application Definition.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery from which the Application
     * Definitions are to be retrieved.
     * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryApplicationsGetResponse>
     */
    get(resourceGroupName: string, galleryName: string, galleryApplicationName: string, options?: msRest.RequestOptionsBase): Promise<Models.GalleryApplicationsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery from which the Application
     * Definitions are to be retrieved.
     * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.
     * @param callback The callback
     */
    get(resourceGroupName: string, galleryName: string, galleryApplicationName: string, callback: msRest.ServiceCallback<Models.GalleryApplication>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery from which the Application
     * Definitions are to be retrieved.
     * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, galleryName: string, galleryApplicationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalleryApplication>): void;
    /**
     * Delete a gallery Application.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition is to be deleted.
     * @param galleryApplicationName The name of the gallery Application Definition to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, galleryName: string, galleryApplicationName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * List gallery Application Definitions in a gallery.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery from which Application Definitions
     * are to be listed.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryApplicationsListByGalleryResponse>
     */
    listByGallery(resourceGroupName: string, galleryName: string, options?: msRest.RequestOptionsBase): Promise<Models.GalleryApplicationsListByGalleryResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery from which Application Definitions
     * are to be listed.
     * @param callback The callback
     */
    listByGallery(resourceGroupName: string, galleryName: string, callback: msRest.ServiceCallback<Models.GalleryApplicationList>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery from which Application Definitions
     * are to be listed.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByGallery(resourceGroupName: string, galleryName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalleryApplicationList>): void;
    /**
     * Create or update a gallery Application Definition.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition is to be created.
     * @param galleryApplicationName The name of the gallery Application Definition to be created or
     * updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed
     * in the middle. The maximum length is 80 characters.
     * @param galleryApplication Parameters supplied to the create or update gallery Application
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, galleryName: string, galleryApplicationName: string, galleryApplication: Models.GalleryApplication, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Update a gallery Application Definition.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition is to be updated.
     * @param galleryApplicationName The name of the gallery Application Definition to be updated. The
     * allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the
     * middle. The maximum length is 80 characters.
     * @param galleryApplication Parameters supplied to the update gallery Application operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, galleryName: string, galleryApplicationName: string, galleryApplication: Models.GalleryApplicationUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Delete a gallery Application.
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application
     * Definition is to be deleted.
     * @param galleryApplicationName The name of the gallery Application Definition to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, galleryName: string, galleryApplicationName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * List gallery Application Definitions in a gallery.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GalleryApplicationsListByGalleryNextResponse>
     */
    listByGalleryNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.GalleryApplicationsListByGalleryNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByGalleryNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.GalleryApplicationList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByGalleryNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalleryApplicationList>): void;
}
//# sourceMappingURL=galleryApplications.d.ts.map