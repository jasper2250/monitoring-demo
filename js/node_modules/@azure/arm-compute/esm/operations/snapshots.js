/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/snapshotsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Snapshots. */
var Snapshots = /** @class */ (function () {
    /**
     * Create a Snapshots.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function Snapshots(client) {
        this.client = client;
    }
    /**
     * Creates or updates a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param snapshot Snapshot object supplied in the body of the Put disk operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SnapshotsCreateOrUpdateResponse>
     */
    Snapshots.prototype.createOrUpdate = function (resourceGroupName, snapshotName, snapshot, options) {
        return this.beginCreateOrUpdate(resourceGroupName, snapshotName, snapshot, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Updates (patches) a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param snapshot Snapshot object supplied in the body of the Patch snapshot operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SnapshotsUpdateResponse>
     */
    Snapshots.prototype.update = function (resourceGroupName, snapshotName, snapshot, options) {
        return this.beginUpdate(resourceGroupName, snapshotName, snapshot, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    Snapshots.prototype.get = function (resourceGroupName, snapshotName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            snapshotName: snapshotName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Deletes a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    Snapshots.prototype.deleteMethod = function (resourceGroupName, snapshotName, options) {
        return this.beginDeleteMethod(resourceGroupName, snapshotName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    Snapshots.prototype.listByResourceGroup = function (resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            options: options
        }, listByResourceGroupOperationSpec, callback);
    };
    Snapshots.prototype.list = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listOperationSpec, callback);
    };
    /**
     * Grants access to a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param grantAccessData Access data object supplied in the body of the get snapshot access
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SnapshotsGrantAccessResponse>
     */
    Snapshots.prototype.grantAccess = function (resourceGroupName, snapshotName, grantAccessData, options) {
        return this.beginGrantAccess(resourceGroupName, snapshotName, grantAccessData, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Revokes access to a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    Snapshots.prototype.revokeAccess = function (resourceGroupName, snapshotName, options) {
        return this.beginRevokeAccess(resourceGroupName, snapshotName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Creates or updates a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param snapshot Snapshot object supplied in the body of the Put disk operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Snapshots.prototype.beginCreateOrUpdate = function (resourceGroupName, snapshotName, snapshot, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            snapshotName: snapshotName,
            snapshot: snapshot,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Updates (patches) a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param snapshot Snapshot object supplied in the body of the Patch snapshot operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Snapshots.prototype.beginUpdate = function (resourceGroupName, snapshotName, snapshot, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            snapshotName: snapshotName,
            snapshot: snapshot,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    /**
     * Deletes a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Snapshots.prototype.beginDeleteMethod = function (resourceGroupName, snapshotName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            snapshotName: snapshotName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    /**
     * Grants access to a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param grantAccessData Access data object supplied in the body of the get snapshot access
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Snapshots.prototype.beginGrantAccess = function (resourceGroupName, snapshotName, grantAccessData, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            snapshotName: snapshotName,
            grantAccessData: grantAccessData,
            options: options
        }, beginGrantAccessOperationSpec, options);
    };
    /**
     * Revokes access to a snapshot.
     * @param resourceGroupName The name of the resource group.
     * @param snapshotName The name of the snapshot that is being created. The name can't be changed
     * after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
     * max name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Snapshots.prototype.beginRevokeAccess = function (resourceGroupName, snapshotName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            snapshotName: snapshotName,
            options: options
        }, beginRevokeAccessOperationSpec, options);
    };
    Snapshots.prototype.listByResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByResourceGroupNextOperationSpec, callback);
    };
    Snapshots.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    return Snapshots;
}());
export { Snapshots };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.snapshotName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Snapshot
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SnapshotList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SnapshotList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.snapshotName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "snapshot",
        mapper: __assign(__assign({}, Mappers.Snapshot), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Snapshot
        },
        202: {
            bodyMapper: Mappers.Snapshot
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.snapshotName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "snapshot",
        mapper: __assign(__assign({}, Mappers.SnapshotUpdate), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Snapshot
        },
        202: {
            bodyMapper: Mappers.Snapshot
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.snapshotName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginGrantAccessOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.snapshotName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "grantAccessData",
        mapper: __assign(__assign({}, Mappers.GrantAccessData), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.AccessUri
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginRevokeAccessOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.snapshotName
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SnapshotList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SnapshotList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=snapshots.js.map