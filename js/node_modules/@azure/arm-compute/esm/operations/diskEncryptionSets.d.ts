import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a DiskEncryptionSets. */
export declare class DiskEncryptionSets {
    private readonly client;
    /**
     * Create a DiskEncryptionSets.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Creates or updates a disk encryption set
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskEncryptionSet disk encryption set object supplied in the body of the Put disk
     * encryption set operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, diskEncryptionSetName: string, diskEncryptionSet: Models.DiskEncryptionSet, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsCreateOrUpdateResponse>;
    /**
     * Updates (patches) a disk encryption set.
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskEncryptionSet disk encryption set object supplied in the body of the Patch disk
     * encryption set operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsUpdateResponse>
     */
    update(resourceGroupName: string, diskEncryptionSetName: string, diskEncryptionSet: Models.DiskEncryptionSetUpdate, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsUpdateResponse>;
    /**
     * Gets information about a disk encryption set.
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsGetResponse>
     */
    get(resourceGroupName: string, diskEncryptionSetName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param callback The callback
     */
    get(resourceGroupName: string, diskEncryptionSetName: string, callback: msRest.ServiceCallback<Models.DiskEncryptionSet>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, diskEncryptionSetName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskEncryptionSet>): void;
    /**
     * Deletes a disk encryption set.
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, diskEncryptionSetName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Lists all the disk encryption sets under a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * Lists all the disk encryption sets under a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * Lists all resources that are encrypted with this disk encryption set.
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsListAssociatedResourcesResponse>
     */
    listAssociatedResources(resourceGroupName: string, diskEncryptionSetName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsListAssociatedResourcesResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param callback The callback
     */
    listAssociatedResources(resourceGroupName: string, diskEncryptionSetName: string, callback: msRest.ServiceCallback<Models.ResourceUriList>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    listAssociatedResources(resourceGroupName: string, diskEncryptionSetName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceUriList>): void;
    /**
     * Creates or updates a disk encryption set
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskEncryptionSet disk encryption set object supplied in the body of the Put disk
     * encryption set operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, diskEncryptionSetName: string, diskEncryptionSet: Models.DiskEncryptionSet, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Updates (patches) a disk encryption set.
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param diskEncryptionSet disk encryption set object supplied in the body of the Patch disk
     * encryption set operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, diskEncryptionSetName: string, diskEncryptionSet: Models.DiskEncryptionSetUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes a disk encryption set.
     * @param resourceGroupName The name of the resource group.
     * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name
     * can't be changed after the disk encryption set is created. Supported characters for the name are
     * a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, diskEncryptionSetName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists all the disk encryption sets under a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * Lists all the disk encryption sets under a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiskEncryptionSetList>): void;
    /**
     * Lists all resources that are encrypted with this disk encryption set.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiskEncryptionSetsListAssociatedResourcesNextResponse>
     */
    listAssociatedResourcesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiskEncryptionSetsListAssociatedResourcesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listAssociatedResourcesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceUriList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listAssociatedResourcesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceUriList>): void;
}
//# sourceMappingURL=diskEncryptionSets.d.ts.map