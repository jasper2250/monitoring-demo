import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a DedicatedHosts. */
export declare class DedicatedHosts {
    private readonly client;
    /**
     * Create a DedicatedHosts.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * Create or update a dedicated host .
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host .
     * @param parameters Parameters supplied to the Create Dedicated Host.
     * @param [options] The optional parameters
     * @returns Promise<Models.DedicatedHostsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, hostGroupName: string, hostName: string, parameters: Models.DedicatedHost, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedHostsCreateOrUpdateResponse>;
    /**
     * Update an dedicated host .
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host .
     * @param parameters Parameters supplied to the Update Dedicated Host operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DedicatedHostsUpdateResponse>
     */
    update(resourceGroupName: string, hostGroupName: string, hostName: string, parameters: Models.DedicatedHostUpdate, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedHostsUpdateResponse>;
    /**
     * Delete a dedicated host.
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, hostGroupName: string, hostName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Retrieves information about a dedicated host.
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host.
     * @param [options] The optional parameters
     * @returns Promise<Models.DedicatedHostsGetResponse>
     */
    get(resourceGroupName: string, hostGroupName: string, hostName: string, options?: Models.DedicatedHostsGetOptionalParams): Promise<Models.DedicatedHostsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host.
     * @param callback The callback
     */
    get(resourceGroupName: string, hostGroupName: string, hostName: string, callback: msRest.ServiceCallback<Models.DedicatedHost>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, hostGroupName: string, hostName: string, options: Models.DedicatedHostsGetOptionalParams, callback: msRest.ServiceCallback<Models.DedicatedHost>): void;
    /**
     * Lists all of the dedicated hosts in the specified dedicated host group. Use the nextLink
     * property in the response to get the next page of dedicated hosts.
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param [options] The optional parameters
     * @returns Promise<Models.DedicatedHostsListByHostGroupResponse>
     */
    listByHostGroup(resourceGroupName: string, hostGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedHostsListByHostGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param callback The callback
     */
    listByHostGroup(resourceGroupName: string, hostGroupName: string, callback: msRest.ServiceCallback<Models.DedicatedHostListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByHostGroup(resourceGroupName: string, hostGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DedicatedHostListResult>): void;
    /**
     * Create or update a dedicated host .
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host .
     * @param parameters Parameters supplied to the Create Dedicated Host.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, hostGroupName: string, hostName: string, parameters: Models.DedicatedHost, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Update an dedicated host .
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host .
     * @param parameters Parameters supplied to the Update Dedicated Host operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, hostGroupName: string, hostName: string, parameters: Models.DedicatedHostUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Delete a dedicated host.
     * @param resourceGroupName The name of the resource group.
     * @param hostGroupName The name of the dedicated host group.
     * @param hostName The name of the dedicated host.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, hostGroupName: string, hostName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists all of the dedicated hosts in the specified dedicated host group. Use the nextLink
     * property in the response to get the next page of dedicated hosts.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DedicatedHostsListByHostGroupNextResponse>
     */
    listByHostGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedHostsListByHostGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByHostGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DedicatedHostListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByHostGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DedicatedHostListResult>): void;
}
//# sourceMappingURL=dedicatedHosts.d.ts.map