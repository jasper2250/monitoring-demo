import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ComputeManagementClientContext } from "../computeManagementClientContext";
/** Class representing a RestorePointCollections. */
export declare class RestorePointCollections {
    private readonly client;
    /**
     * Create a RestorePointCollections.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client: ComputeManagementClientContext);
    /**
     * The operation to create or update the restore point collection. Please refer to
     * https://aka.ms/RestorePoints for more details. When updating a restore point collection, only
     * tags may be modified.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param parameters Parameters supplied to the Create or Update restore point collection
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointCollectionsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, restorePointCollectionName: string, parameters: Models.RestorePointCollection, options?: msRest.RequestOptionsBase): Promise<Models.RestorePointCollectionsCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param parameters Parameters supplied to the Create or Update restore point collection
     * operation.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, restorePointCollectionName: string, parameters: Models.RestorePointCollection, callback: msRest.ServiceCallback<Models.RestorePointCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param parameters Parameters supplied to the Create or Update restore point collection
     * operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, restorePointCollectionName: string, parameters: Models.RestorePointCollection, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RestorePointCollection>): void;
    /**
     * The operation to update the restore point collection.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param parameters Parameters supplied to the Update restore point collection operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointCollectionsUpdateResponse>
     */
    update(resourceGroupName: string, restorePointCollectionName: string, parameters: Models.RestorePointCollectionUpdate, options?: msRest.RequestOptionsBase): Promise<Models.RestorePointCollectionsUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param parameters Parameters supplied to the Update restore point collection operation.
     * @param callback The callback
     */
    update(resourceGroupName: string, restorePointCollectionName: string, parameters: Models.RestorePointCollectionUpdate, callback: msRest.ServiceCallback<Models.RestorePointCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param parameters Parameters supplied to the Update restore point collection operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, restorePointCollectionName: string, parameters: Models.RestorePointCollectionUpdate, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RestorePointCollection>): void;
    /**
     * The operation to delete the restore point collection. This operation will also delete all the
     * contained restore points.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the Restore Point Collection.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, restorePointCollectionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * The operation to get the restore point collection.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointCollectionsGetResponse>
     */
    get(resourceGroupName: string, restorePointCollectionName: string, options?: Models.RestorePointCollectionsGetOptionalParams): Promise<Models.RestorePointCollectionsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param callback The callback
     */
    get(resourceGroupName: string, restorePointCollectionName: string, callback: msRest.ServiceCallback<Models.RestorePointCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, restorePointCollectionName: string, options: Models.RestorePointCollectionsGetOptionalParams, callback: msRest.ServiceCallback<Models.RestorePointCollection>): void;
    /**
     * Gets the list of restore point collections in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointCollectionsListResponse>
     */
    list(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.RestorePointCollectionsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param callback The callback
     */
    list(resourceGroupName: string, callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
    /**
     * Gets the list of restore point collections in the subscription. Use nextLink property in the
     * response to get the next page of restore point collections. Do this till nextLink is not null to
     * fetch all the restore point collections.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointCollectionsListAllResponse>
     */
    listAll(options?: msRest.RequestOptionsBase): Promise<Models.RestorePointCollectionsListAllResponse>;
    /**
     * @param callback The callback
     */
    listAll(callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listAll(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
    /**
     * The operation to delete the restore point collection. This operation will also delete all the
     * contained restore points.
     * @param resourceGroupName The name of the resource group.
     * @param restorePointCollectionName The name of the Restore Point Collection.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, restorePointCollectionName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets the list of restore point collections in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointCollectionsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RestorePointCollectionsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
    /**
     * Gets the list of restore point collections in the subscription. Use nextLink property in the
     * response to get the next page of restore point collections. Do this till nextLink is not null to
     * fetch all the restore point collections.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RestorePointCollectionsListAllNextResponse>
     */
    listAllNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RestorePointCollectionsListAllNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listAllNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listAllNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RestorePointCollectionListResult>): void;
}
//# sourceMappingURL=restorePointCollections.d.ts.map